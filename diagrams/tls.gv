digraph TLS {

        init [shape=Mdiamond];
	error [shape=octagon];

	init -> error [constraint=false];

	subgraph cluster1 {
		node [style=filled];

		// TLS 1.3
		tls13_client_start -> tls13_client_wait_sh
		[label="[Send CH]",constraint=false,rankdir="RL",color=green];

		tls13_client_wait_sh -> tls13_client_wait_ee
		[label="[Recv SH]",color=green];
		tls13_client_wait_sh -> tls13_client_start
		[label="[Recv HelloRetryRequest]",constraint=false,rankdir="LR",color=green];

		tls13_client_wait_ee -> tls13_client_wait_finished
		[label="[Recv EE]\nUsing PSK",color=red];
		tls13_client_wait_ee -> tls13_client_wait_cert_cr
		[label="[Recv EE]\nUsing Cert",color=green];
		tls13_client_wait_cert_cr -> tls13_client_wait_cv
		[label="[Recv Cert]",color=green];
		tls13_client_wait_cert_cr -> tls13_client_wait_cert
		[label="[Recv CR]",color=green];
		tls13_client_wait_cert -> tls13_client_wait_cv
		[label="[Recv Cert]",constraint=false,color=green];
		tls13_client_wait_cv -> tls13_client_wait_finished
		[label="[Recv CV]",color=green];
		tls13_client_wait_finished -> tls13_client_connected
		[label="[Recv Finished]",color=green];

		tls13_client_start [label="start",fillcolor=green];
		tls13_client_wait_sh [label="wait_sh",color=black,fillcolor=green];
		tls13_client_wait_ee [label="wait_ee",color=black,fillcolor=green];
		tls13_client_wait_finished [label="wait_finished",color=black,fillcolor=green];
		tls13_client_wait_cert_cr [label="wait_cert_cr",color=black,fillcolor=green];
		tls13_client_wait_cv [label="wait_cv",color=black,fillcolor=green];
		tls13_client_wait_cert [label="wait_cert",fillcolor=green];
		tls13_client_connected [label="connected",color=black,fillcolor=green];

		label="TLS 1.3\nClient"
		color=blue;

		// { rank = same; tls12_hello; tls13_client_start;}

}

	subgraph cluster0 {
		node [style=filled,color=black,fillcolor=grey];
		color=lightgrey;
		// hello [style=filled,color=black,fillcolor=green];

		// {rank=same; tls12_hello; tls13_client_start; }
		tls12_hello -> tls13_client_wait_sh
		[constraint=false,color=green,rank=same];

		tls12_hello -> tls12_abbreviated;
		tls12_hello -> tls12_user_hello;
		tls12_hello -> tls12_certify;



		tls12_user_hello -> tls12_hello [label="[Recv HC]",constraint=false];

		tls12_abbreviated -> tls12_connection;


		tls12_certify -> tls12_cipher;
		tls12_cipher -> tls12_connection;

		tls12_hello [label="hello",style=filled,color=black,fillcolor=green];
		tls12_user_hello [label="user_hello"];
		tls12_abbreviated [label="abbreviated"];
		tls12_certify [label="certify"];
		tls12_cipher [label="cipher"];
		tls12_connection [label="connection"];
		tls12_downgrade [label="downgrade"];

		label="TLS 1.2\nClient/Server";
		color=black;

		{rank=same; tls12_downgrade; tls12_connection; }



	}



	subgraph cluster2 {
		node [style=filled,color=black,fillcolor=grey];

		// tls12_hello -> tls13_server_start [label="[Recv CH]",constraint=false];

		// { rank = same; tls12_hello; tls13_server_start;}
		tls12_hello -> tls13_server_start
		[constraint=false,color=green,rank=same];

		tls13_server_start -> tls13_server_negotiated
		[label="[Recv CH]",color=green];
		tls13_server_start -> tls13_server_start
		[label="[Send HelloRetryrequest]",constraint=false,color=green];

		// tls13_server_recvd_ch -> tls13_server_negotiated [label="Select params"];

		tls13_server_negotiated -> tls13_server_wait_eoed
		[label="[Send ServerHello]\n0-RTT",color=red];
		tls13_server_negotiated -> tls13_server_wait_flight2
		[label="[Send ServerHello]\nNo 0-RTT",color=green];

		tls13_server_wait_eoed -> tls13_server_wait_eoed [label="[Recv ED]"];
		tls13_server_wait_eoed -> tls13_server_wait_flight2 [label="[Recv EOED]",color=red];

		tls13_server_wait_flight2 -> tls13_server_wait_cert
		[label="Client auth",color=green];
		tls13_server_wait_flight2 -> tls13_server_wait_finished
		[label="No auth",color=green];

		tls13_server_wait_cert -> tls13_server_wait_cv [label="[Recv Cert]",color=green];
		tls13_server_wait_cert -> tls13_server_wait_finished
		[label="[Recv EC]",color=green];
		tls13_server_wait_cv -> tls13_server_wait_finished
		[label="[Recv CV]",constraint=false,color=green];

		tls13_server_wait_finished -> tls13_server_connected
		[label="[Recv Finished]",color=green];

		tls13_server_start
		[label="start",fillcolor="green"];
		// tls13_server_recvd_ch [label="recvd_ch"];
		tls13_server_negotiated
		[label="negotiated",fillcolor="green;0.7:red",gradientangle=270];
		tls13_server_wait_eoed [label="wait_eoed",fillcolor=red];
		tls13_server_wait_flight2 [label="wait_flight2",fillcolor="red",
					   gradientangle=270];
		tls13_server_wait_cert [label="wait_cert",fillcolor=green];
		tls13_server_wait_cv [label="wait_cv",fillcolor=green];
		tls13_server_wait_finished [label="wait_finished",fillcolor=green];
		tls13_server_connected [label="connected",fillcolor=green];

		label="TLS 1.3\nServer"
		color=blue;



        }
        init -> tls12_hello [label="{start, Timeout}\n[Send CH]",color=green];

	// Workaround to keep node ordering
	init -> tls13_client_wait_sh [label="[Send CH]",style=invis];
	init -> tls13_server_start [label="[Send CH]",style=invis];

}
